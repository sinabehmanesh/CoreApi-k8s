apiVersion: apps/v1
kind: Deployment
metadata:
  name: CoreApi
  namespace: Production
  labels:
    app: CoreApi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: CoreApi
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: CoreApi
    spec:
      containers:
      - name: CoreApi
        image: CoreApi:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8000
        envFrom:
        - configMapRef:
            name: CoreApi-CM
        env: 
        - name: DB_PASSWORD
          valueFrom: 
            secretKeyRef: 
              name: CoreApi-secret 
              key: db_password

#API <=> DATABASE health check before api roll out
      initContainers:
      - name: init-database
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup mysql-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for database; sleep 2; done"]

#app service health checks
        livenessProbe:
          httpGet:
            path: /index.php
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 3
#resource limits
        resources:
          requests:
            memory: "64M"
            cpu: "250m"
          limits:
            memory: "128M"
            cpu: "500m"
#post execution laravel migrate
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", 'php', 'artisan', 'migrate']